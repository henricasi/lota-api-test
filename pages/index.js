import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'

import { fetchAPI } from '@/lib/api'

const inter = Inter({ subsets: ['latin'] })

export default function Home({homeData, projectsData}) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          <p>{homeData.attributes.Sobre}</p>
        </div>
        <div>
          {projectsData.map((project, index) => {
            return <p>{project.attributes.title}</p>
          })}
        </div>
      </main>
    </>
  )
}

export async function getStaticProps() {
  // fetch homepage data
  // const homeQuery = qs.stringify(
  //   {
  //     populate: "*",
  //   },
  //   {
  //     encodeValuesOnly: true,
  //   }
  // );

  const strapiHomeData = await fetchAPI(`home`);
  const homeData = strapiHomeData.data;


  // fetch projects data
  // const projectsQuery = qs.stringify(
  //   {
  //     populate: "deep",
  //   },
  //   {
  //     encodeValuesOnly: true,
  //   }
  // );

  const strapiProjectsData = await fetchAPI(`projetos`);
  let projectsData = strapiProjectsData.data;

  // async function processCaptions(projectsArray) {
  //   let projectsArrayCopy = [...projectsArray]
  //   for (const project of projectsArrayCopy) {
  //       let gallerySlides = project.attributes.gallery.slide
  //       for (const slide of gallerySlides) {
  //         if (slide.caption != null) {
  //           let captionToHTML = await markdownToHTML(slide.caption)
  //           slide.caption = captionToHTML
  //         }
  //       }
  //     }
  //   return projectsArrayCopy
  // }

  // let processedProjectsData = await processCaptions(projectsData)
  // projectsData = processedProjectsData

  // projectsData.forEach((project, index) => {
    
  //   project.attributes.gallery.slide.forEach((slide, index) => {
  //     let newImagesArray = []
  //     // iterar data (array de imagens dentro de slide)
  //     slide.images.data.forEach((image, index) => {        
  //       // para cada imagem, novo objeto apenas com campos desejados

  //       let newImageObject = {
  //         attributes: {
  //           width: image.attributes.width,
  //           height: image.attributes.height,
  //           url: image.attributes.url,
  //           formats: {}
  //         }
  //       }

  //       if (image.attributes.formats && image.attributes.formats.large !== null && image.attributes.formats.large !== undefined) {
  //         newImageObject.attributes.formats = {
  //           large: {
  //             width: image.attributes.formats.large.width,
  //             height: image.attributes.formats.large.height,
  //             url: image.attributes.formats.large.url,
  //           }
  //         }
  //       }


  //       newImagesArray.push(newImageObject)
  //       slide.images.data = newImagesArray
  //     })
  //   })
  // })

  projectsData.sort((a, b) => new Date(b.attributes.date) - new Date(a.attributes.date))

  return {
    props: { homeData, projectsData },
    revalidate: 10,
  };
}